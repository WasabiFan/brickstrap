#!/bin/bash

# create a disk image with MBR partition table and 2 partitions.
# ------------------------------------------------------------------------------
# part | label             | mount point | fs   | size
# ------------------------------------------------------------------------------
#    1 | ${BOOT_PART_NAME} | /boot/flash | VFAT | 48MB
#    2 | ${ROOT_PART_NAME} | /           | ext4 | ${IMAGE_FILE_SIZE} - 48MB
# ------------------------------------------------------------------------------
#
# Variables:
# BOOT_PART_NAME: Label of boot partition. Default: BOOT
# ROOT_PART_NAME: Label of root partition. Default: ROOTFS
# IMAGE_FILE_SIZE: The size of the entire image file. Default: 3800M
# 

BOOT_PART_NAME=${BOOT_PART_NAME:-BOOT}
ROOT_PART_NAME=${ROOT_PART_NAME:-ROOTFS}
IMAGE_FILE_SIZE=${IMAGE_FILE_SIZE:-3800M}

case $1 in

validate)
        [ ${#BOOT_PART_NAME} -gt 11 ] && \
            { echo "BOOT_PART_NAME cannot be more than 11 characters."; exit 1; }
        # see https://en.wikipedia.org/wiki/Label_%28command%29
        echo $BOOT_PART_NAME | egrep -q '^[A-Z0-9_-]*$' || \
            { echo "BOOT_PART_NAME contains invalid characters"; exit 1; }

        [ ${#ROOT_PART_NAME} -gt 16 ] && \
            { echo "ROOT_PART_NAME cannot be more than 16 characters."; exit 1; }
        echo $ROOT_PART_NAME | egrep -q '^[a-zA-Z0-9_-]*$' || \
            { echo "ROOT_PART_NAME contains invalid characters"; exit 1; }
    ;;
create)
    info "Creating image file..."
    debug "TARBALL: $(br_tarball_path)"
    debug "IMAGE: $(br_image_path bootroot img)"
    debug "IMAGE_FILE_SIZE: ${IMAGE_FILE_SIZE}"
    [ ! -f "$(br_tarball_path)" ] && fail "Could not find $(br_tarball_path)"
    [ -z "$BR_FORCE" ] && [ -f "$(br_image_path bootroot img)" ] && \
        fail "$(br_image_path bootroot img) already exists. Use -f option to overwrite."

    mkdir -p "$(br_image_dir)"

    guestfish -N \
        "$(br_image_path bootroot img)"=bootroot:vfat:ext4:${IMAGE_FILE_SIZE}:48M:mbr \
        part-set-mbr-id /dev/sda 1 0x0b : \
        set-label /dev/sda2 ${ROOT_PART_NAME} : \
        mount /dev/sda2 / : \
        tar-in "$(br_tarball_path)" / : \
        mkdir-p /media/mmc_p1 : \
        mount /dev/sda1 /media/mmc_p1 : \
        glob mv /boot/flash/* /media/mmc_p1/ : \

    # Hack to set the volume label on the vfat partition since guestfish does
    # not know how to do that. Must be null padded to exactly 11 bytes.
    echo -e -n "\0\0\0\0\0\0\0\0\0\0\0" | \
        dd of="$(br_image_path bootroot img)" \
            bs=1 seek=32811 count=11 conv=notrunc >/dev/null 2>&1
    echo -e -n "$BOOT_PART_NAME" | \
        dd of="$(br_image_path bootroot img)" \
            bs=1 seek=32811 count=${#BOOT_PART_NAME} conv=notrunc >/dev/null 2>&1
    ;;

    *)
        echo "Usage: $(basename $0) { validate | create }"
        exit 1
esac
